new Vue({el:"#queue-manager-utility",delimiters:["[[","]]"],data:()=>({loading:!0,jobs:[],activeJob:null,limit:50}),mounted(){this.reIndexJobs(),window.setInterval(this.reIndexJobs,2500)},filters:{capitalize:e=>e?(e=e.toString()).charAt(0).toUpperCase()+e.slice(1):""},methods:{reIndexJobs(){this.updateJobs().then(this.handleDataResponse)},updateJobs(){return new Promise((e,t)=>{axios.get(Craft.getActionUrl("queue/get-job-info",{limit:this.limit})).then(t=>{e(t)},e=>{Craft.cp.displayError(e.response.data.error),t(e)})})},setActiveJob(e){this.loading=!0;let t=this;axios.get(Craft.getActionUrl("queue/get-job-details?id="+e.id,{})).then(e=>{t.activeJob=e.data,t.loading=!1},e=>{Craft.cp.displayError(e.response.data.error),reject(e)})},handleDataResponse(e){this.jobs=e.data,this.loading=!1},retryAll(){confirm("Are you sure?")&&this.craftPost("queue/retry-all",{}).then(e=>{Craft.cp.displayNotice("All jobs will be retried. They will soon show progress.")})},releaseAll(){confirm("Are you sure? This will delete all jobs in the Queue - not just those displayed below.")&&this.craftPost("queue/release-all",{}).then(e=>{this.jobs=[],this.activeJob=null,Craft.cp.displayNotice("All jobs released")})},retryJob(e){confirm("Are you sure?")&&this.craftPost("queue/retry",{id:e.id}).then(e=>{this.activeJob=null,Craft.cp.displayNotice("Job retried. It will be updated soon.")})},releaseJob(e){confirm("Are you sure?")&&this.craftPost("queue/release",{id:e.id}).then(t=>{this.quickRemoveJob(e.id),this.activeJob=null,Craft.cp.displayNotice("Job released")})},quickRemoveJob(e){let t=this.jobs.find(t=>t.id==e);t&&this.jobs.splice(this.jobs.indexOf(t),1)},resetActiveJob(){this.activeJob=null},jobStatusDeterminer(e){switch(e.status.toString()){case"1":return"Pending";case"2":return"Reserved";case"3":return"Done";case"4":return"Failed";default:return"Unkown status"}},craftPost:(e,t)=>new Promise((s,i)=>{Craft.postActionRequest(e,t,s)})}});
//# sourceMappingURL=queue-manager.min.js.map