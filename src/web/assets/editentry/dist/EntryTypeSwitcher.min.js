!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n;n=jQuery,Craft.EntryTypeSwitcher=Garnish.Base.extend({$typeSelect:null,$spinner:null,init:function(){this.$typeSelect=n("#entryType"),this.$spinner=n('<div class="spinner hidden"/>').insertAfter(this.$typeSelect.parent()),this.addListener(this.$typeSelect,"change","onTypeChange")},onTypeChange:function(e){this.$spinner.removeClass("hidden"),Craft.postActionRequest("entries/switch-entry-type",Craft.cp.$primaryForm.serialize(),n.proxy((function(e,t){if(this.$spinner.addClass("hidden"),"success"===t){this.trigger("beforeTypeChange");var r=n("#tabs");e.tabsHtml?(r.length?r.replaceWith(e.tabsHtml):n(e.tabsHtml).insertBefore(n("#content")),Craft.cp.$mainContent.addClass("has-tabs")):(r.remove(),Craft.cp.$mainContent.removeClass("has-tabs")),n("#fields").html(e.fieldsHtml),Craft.initUiElements(n("#fields")),Craft.appendHeadHtml(e.headHtml),Craft.appendFootHtml(e.bodyHtml),"undefined"!=typeof slugGenerator&&slugGenerator.setNewSource("#title"),Craft.cp.initTabs(),this.trigger("typeChange")}}),this))}})}]);
//# sourceMappingURL=EntryTypeSwitcher.min.js.map