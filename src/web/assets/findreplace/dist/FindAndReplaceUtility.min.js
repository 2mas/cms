!function(t){var r={};function e(s){if(r[s])return r[s].exports;var o=r[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=r,e.d=function(t,r,s){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:s})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(e.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var o in t)e.d(s,o,function(r){return t[r]}.bind(null,o));return s},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=0)}([function(t,r){var e;e=jQuery,Craft.FindAndReplaceUtility=Garnish.Base.extend({$trigger:null,$form:null,init:function(t){this.$form=e("#"+t),this.$trigger=e("input.submit",this.$form),this.$status=e(".utility-status",this.$form),this.addListener(this.$form,"submit","onSubmit")},onSubmit:function(t){t.preventDefault(),this.$trigger.hasClass("disabled")||(this.progressBar?this.progressBar.resetProgressBar():this.progressBar=new Craft.ProgressBar(this.$status),this.progressBar.$progressBar.removeClass("hidden"),this.progressBar.$progressBar.velocity("stop").velocity({opacity:1},{complete:e.proxy((function(){var t=Garnish.getPostData(this.$form),r=Craft.expandPostArray(t),s={params:r};Craft.postActionRequest(r.action,s,e.proxy((function(t,r){t&&t.error&&alert(t.error),this.updateProgressBar(),setTimeout(e.proxy(this,"onComplete"),300)}),this),{complete:e.noop})}),this)}),this.$allDone&&this.$allDone.css("opacity",0),this.$trigger.addClass("disabled"),this.$trigger.trigger("blur"))},updateProgressBar:function(){this.progressBar.setProgressPercentage(100)},onComplete:function(){this.$allDone||(this.$allDone=e('<div class="alldone" data-icon="done" />').appendTo(this.$status),this.$allDone.css("opacity",0)),this.progressBar.$progressBar.velocity({opacity:0},{duration:"fast",complete:e.proxy((function(){this.$allDone.velocity({opacity:1},{duration:"fast"}),this.$trigger.removeClass("disabled"),this.$trigger.trigger("focus")}),this)}),Craft.cp.trackJobProgress(!1,!0)}})}]);
//# sourceMappingURL=FindAndReplaceUtility.min.js.map